[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "getenv",
        "importPath": "os",
        "description": "os",
        "isExtraImport": true,
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "environ",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "environ",
        "description": "environ",
        "detail": "environ",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "urlparse",
        "importPath": "urllib.parse",
        "description": "urllib.parse",
        "isExtraImport": true,
        "detail": "urllib.parse",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_swagger_view",
        "importPath": "rest_framework_swagger.views",
        "description": "rest_framework_swagger.views",
        "isExtraImport": true,
        "detail": "rest_framework_swagger.views",
        "documentation": {}
    },
    {
        "label": "get_schema_view",
        "importPath": "drf_yasg.views",
        "description": "drf_yasg.views",
        "isExtraImport": true,
        "detail": "drf_yasg.views",
        "documentation": {}
    },
    {
        "label": "openapi",
        "importPath": "drf_yasg",
        "description": "drf_yasg",
        "isExtraImport": true,
        "detail": "drf_yasg",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "mixins",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TokenVerifyView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Iterable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "PermissionsMixin",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "Permission",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "Group",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "make_password",
        "importPath": "django.contrib.auth.hashers",
        "description": "django.contrib.auth.hashers",
        "isExtraImport": true,
        "detail": "django.contrib.auth.hashers",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "HTTP_404_NOT_FOUND",
        "importPath": "rest_framework.status",
        "description": "rest_framework.status",
        "isExtraImport": true,
        "detail": "rest_framework.status",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairSerializer",
        "importPath": "rest_framework_simplejwt.serializers",
        "description": "rest_framework_simplejwt.serializers",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.serializers",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "BasicAuthentication",
        "importPath": "rest_framework.authentication",
        "description": "rest_framework.authentication",
        "isExtraImport": true,
        "detail": "rest_framework.authentication",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAdminUser",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "RefreshToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "csv",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "csv",
        "description": "csv",
        "detail": "csv",
        "documentation": {}
    },
    {
        "label": "io",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "io",
        "description": "io",
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions ",
        "description": "rest_framework.permissions ",
        "isExtraImport": true,
        "detail": "rest_framework.permissions ",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators ",
        "description": "rest_framework.decorators ",
        "isExtraImport": true,
        "detail": "rest_framework.decorators ",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "BackendTp231.asgi",
        "description": "BackendTp231.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "BackendTp231.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "BackendTp231.settings",
        "description": "BackendTp231.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# env = environ.Env()\n# environ.Env.read_env(BASE_DIR/'.env')\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-3$k*w_)okxoir1w)x=!&xpm6$#d6lmt(tj(*71rbv@vep40k+x'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [",
        "detail": "BackendTp231.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "BackendTp231.settings",
        "description": "BackendTp231.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-3$k*w_)okxoir1w)x=!&xpm6$#d6lmt(tj(*71rbv@vep40k+x'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\n    '*',\n]\nCORS_ORIGIN_ALLOW_ALL = True\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',",
        "detail": "BackendTp231.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "BackendTp231.settings",
        "description": "BackendTp231.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = [\n    '*',\n]\nCORS_ORIGIN_ALLOW_ALL = True\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "BackendTp231.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "BackendTp231.settings",
        "description": "BackendTp231.settings",
        "peekOfCode": "ALLOWED_HOSTS = [\n    '*',\n]\nCORS_ORIGIN_ALLOW_ALL = True\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "BackendTp231.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ORIGIN_ALLOW_ALL",
        "kind": 5,
        "importPath": "BackendTp231.settings",
        "description": "BackendTp231.settings",
        "peekOfCode": "CORS_ORIGIN_ALLOW_ALL = True\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n   'rest_framework_swagger',       # Swagger ",
        "detail": "BackendTp231.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "BackendTp231.settings",
        "description": "BackendTp231.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n   'rest_framework_swagger',       # Swagger \n    'rest_framework',               # Django rest framework\n    'drf_yasg',",
        "detail": "BackendTp231.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "BackendTp231.settings",
        "description": "BackendTp231.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'corsheaders.middleware.CorsMiddleware',\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]",
        "detail": "BackendTp231.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "BackendTp231.settings",
        "description": "BackendTp231.settings",
        "peekOfCode": "ROOT_URLCONF = 'BackendTp231.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "BackendTp231.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "BackendTp231.settings",
        "description": "BackendTp231.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "BackendTp231.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "BackendTp231.settings",
        "description": "BackendTp231.settings",
        "peekOfCode": "WSGI_APPLICATION = 'BackendTp231.wsgi.application'\nload_dotenv(BASE_DIR / '.env')\ntmpPostgres = urlparse(getenv(\"DATABASE_URL\"))\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': tmpPostgres.path[1:],\n        'USER': tmpPostgres.username,",
        "detail": "BackendTp231.settings",
        "documentation": {}
    },
    {
        "label": "tmpPostgres",
        "kind": 5,
        "importPath": "BackendTp231.settings",
        "description": "BackendTp231.settings",
        "peekOfCode": "tmpPostgres = urlparse(getenv(\"DATABASE_URL\"))\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': tmpPostgres.path[1:],\n        'USER': tmpPostgres.username,\n        'PASSWORD': tmpPostgres.password,\n        'HOST': tmpPostgres.hostname,",
        "detail": "BackendTp231.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "BackendTp231.settings",
        "description": "BackendTp231.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': tmpPostgres.path[1:],\n        'USER': tmpPostgres.username,\n        'PASSWORD': tmpPostgres.password,\n        'HOST': tmpPostgres.hostname,\n        'PORT': 5432,\n    }\n}",
        "detail": "BackendTp231.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "BackendTp231.settings",
        "description": "BackendTp231.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "BackendTp231.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "BackendTp231.settings",
        "description": "BackendTp231.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nMEDIA_ROOT = BASE_DIR/'media'\nMEDIA_URL = '/media/'\nSTATIC_URL = 'static/'\nSTATIC_ROOT = os.path.join(BASE_DIR,'static')",
        "detail": "BackendTp231.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "BackendTp231.settings",
        "description": "BackendTp231.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nMEDIA_ROOT = BASE_DIR/'media'\nMEDIA_URL = '/media/'\nSTATIC_URL = 'static/'\nSTATIC_ROOT = os.path.join(BASE_DIR,'static')\nSTATICFILS_DIRS =[BASE_DIR/'static/']",
        "detail": "BackendTp231.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "BackendTp231.settings",
        "description": "BackendTp231.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nMEDIA_ROOT = BASE_DIR/'media'\nMEDIA_URL = '/media/'\nSTATIC_URL = 'static/'\nSTATIC_ROOT = os.path.join(BASE_DIR,'static')\nSTATICFILS_DIRS =[BASE_DIR/'static/']\n# Default primary key field type",
        "detail": "BackendTp231.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "BackendTp231.settings",
        "description": "BackendTp231.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nMEDIA_ROOT = BASE_DIR/'media'\nMEDIA_URL = '/media/'\nSTATIC_URL = 'static/'\nSTATIC_ROOT = os.path.join(BASE_DIR,'static')\nSTATICFILS_DIRS =[BASE_DIR/'static/']\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field",
        "detail": "BackendTp231.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "BackendTp231.settings",
        "description": "BackendTp231.settings",
        "peekOfCode": "MEDIA_ROOT = BASE_DIR/'media'\nMEDIA_URL = '/media/'\nSTATIC_URL = 'static/'\nSTATIC_ROOT = os.path.join(BASE_DIR,'static')\nSTATICFILS_DIRS =[BASE_DIR/'static/']\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_FILTER_BACKENDS': (",
        "detail": "BackendTp231.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "BackendTp231.settings",
        "description": "BackendTp231.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\nSTATIC_URL = 'static/'\nSTATIC_ROOT = os.path.join(BASE_DIR,'static')\nSTATICFILS_DIRS =[BASE_DIR/'static/']\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_FILTER_BACKENDS': (\n        'django_filters.rest_framework.DjangoFilterBackend',",
        "detail": "BackendTp231.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "BackendTp231.settings",
        "description": "BackendTp231.settings",
        "peekOfCode": "STATIC_URL = 'static/'\nSTATIC_ROOT = os.path.join(BASE_DIR,'static')\nSTATICFILS_DIRS =[BASE_DIR/'static/']\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_FILTER_BACKENDS': (\n        'django_filters.rest_framework.DjangoFilterBackend',\n        # ...",
        "detail": "BackendTp231.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "BackendTp231.settings",
        "description": "BackendTp231.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR,'static')\nSTATICFILS_DIRS =[BASE_DIR/'static/']\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_FILTER_BACKENDS': (\n        'django_filters.rest_framework.DjangoFilterBackend',\n        # ...\n    ),",
        "detail": "BackendTp231.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "BackendTp231.settings",
        "description": "BackendTp231.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_FILTER_BACKENDS': (\n        'django_filters.rest_framework.DjangoFilterBackend',\n        # ...\n    ),\n    # 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',\n    # 'PAGE_SIZE': 10,\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',",
        "detail": "BackendTp231.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "BackendTp231.settings",
        "description": "BackendTp231.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_FILTER_BACKENDS': (\n        'django_filters.rest_framework.DjangoFilterBackend',\n        # ...\n    ),\n    # 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',\n    # 'PAGE_SIZE': 10,\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n        # 'rest_framework.authentication.SessionAuthentication',",
        "detail": "BackendTp231.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "BackendTp231.settings",
        "description": "BackendTp231.settings",
        "peekOfCode": "SIMPLE_JWT = {\n   'AUTH_HEADER_TYPES': ('JWT',),\n}\nAUTH_USER_MODEL = 'account.CustomUser'",
        "detail": "BackendTp231.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "BackendTp231.settings",
        "description": "BackendTp231.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'account.CustomUser'",
        "detail": "BackendTp231.settings",
        "documentation": {}
    },
    {
        "label": "schema_view",
        "kind": 5,
        "importPath": "BackendTp231.urls",
        "description": "BackendTp231.urls",
        "peekOfCode": "schema_view = get_schema_view(\n    openapi.Info(\n        title=\"Episyche Technologies\",\n        default_version='v1',),\n    public=True,\n    permission_classes=(permissions.AllowAny,),\n)\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('account/', include('account.urls')),",
        "detail": "BackendTp231.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "BackendTp231.urls",
        "description": "BackendTp231.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('account/', include('account.urls')),\n        path(\"app/\",include(\"app.urls\")),\n        # path('store/',include('store.urls')),\n        # path('send-mail/',SendMail.as_view(),name='send_mail'),\n        # path('api/token/', TokenObtainPairView.as_view(), name='token_obtain_pair'),\n        # path('api/token/refresh/', TokenRefreshView.as_view(), name='token_refresh'),\n        # path('api/token/verify/', TokenVerifyView.as_view(), name='token_verify'),\n        # path('api-auth/', include('rest_framework.urls')),",
        "detail": "BackendTp231.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns+=static(settings.STATIC_URL,document_root",
        "kind": 5,
        "importPath": "BackendTp231.urls",
        "description": "BackendTp231.urls",
        "peekOfCode": "urlpatterns+=static(settings.STATIC_URL,document_root = settings.STATIC_ROOT)",
        "detail": "BackendTp231.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "BackendTp231.wsgi",
        "description": "BackendTp231.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "BackendTp231.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "account.migrations.0001_initial",
        "description": "account.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='CustomUser',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "account.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "AccountConfig",
        "kind": 6,
        "importPath": "account.apps",
        "description": "account.apps",
        "peekOfCode": "class AccountConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'account'",
        "detail": "account.apps",
        "documentation": {}
    },
    {
        "label": "CustomUserManager",
        "kind": 6,
        "importPath": "account.models",
        "description": "account.models",
        "peekOfCode": "class CustomUserManager(BaseUserManager):\n    def _create_user(self, email, password=None, **extra_fields):\n        if not email:\n            raise ValueError('Le email ou l\\'email doit être spécifié.')\n        if '@' in email: \n            user = self.model(email=email, **extra_fields)\n        else: \n            user = self.model(email=email, **extra_fields)\n        user.set_password(password)\n        user.save(using=self._db)",
        "detail": "account.models",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "kind": 6,
        "importPath": "account.models",
        "description": "account.models",
        "peekOfCode": "class CustomUser(AbstractBaseUser, PermissionsMixin):\n    email = models.EmailField(unique=True, blank=True, null=True)\n    username = models.CharField(max_length=255, blank=True, null=True)\n    is_staff = models.BooleanField(default=False)\n    is_active = models.BooleanField(default=True)\n    date_joined = models.DateTimeField(default=timezone.now)\n    objects = CustomUserManager()\n    USERNAME_FIELD = 'email' \n    REQUIRED_FIELDS = ['username']",
        "detail": "account.models",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "account.serializers",
        "description": "account.serializers",
        "peekOfCode": "class UserSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = CustomUser\n        fields = ('username','email','password')\nclass UserLoginSerializer(TokenObtainPairSerializer):\n    pass",
        "detail": "account.serializers",
        "documentation": {}
    },
    {
        "label": "UserLoginSerializer",
        "kind": 6,
        "importPath": "account.serializers",
        "description": "account.serializers",
        "peekOfCode": "class UserLoginSerializer(TokenObtainPairSerializer):\n    pass",
        "detail": "account.serializers",
        "documentation": {}
    },
    {
        "label": "PersonnalModelViewSet",
        "kind": 6,
        "importPath": "account.views",
        "description": "account.views",
        "peekOfCode": "class PersonnalModelViewSet(\n                   mixins.RetrieveModelMixin,\n                   mixins.UpdateModelMixin,\n                   mixins.DestroyModelMixin,\n                   mixins.ListModelMixin,\n                   viewsets.GenericViewSet):\n    \"\"\"\n    A viewset that provides default `create()`, `retrieve()`, `update()`,\n    `partial_update()`, `destroy()` and `list()` actions.\n    \"\"\"",
        "detail": "account.views",
        "documentation": {}
    },
    {
        "label": "UserRegister",
        "kind": 6,
        "importPath": "account.views",
        "description": "account.views",
        "peekOfCode": "class UserRegister(viewsets.ModelViewSet):\n    permission_classes = [AllowAny]\n    serializer_class = UserSerializer\n    queryset = CustomUser.objects.all()\n    def create(self, request, *args, **kwargs):\n        serializers = self.get_serializer(data=request.data)\n        if serializers.is_valid():\n            password = serializers.validated_data.get('password')\n            email = serializers.validated_data.get('email')\n            serializers.validated_data['password']  =  make_password(password)",
        "detail": "account.views",
        "documentation": {}
    },
    {
        "label": "UserLogin",
        "kind": 6,
        "importPath": "account.views",
        "description": "account.views",
        "peekOfCode": "class UserLogin(APIView):\n    serializer_class = UserLoginSerializer\n    permission_classes = [AllowAny]\n    def post(self, request):\n        \"\"\"\n        Login a user with their email/email and password.\n        Parameters:\n        email_or_email (str): The email for students/marchands or email for admins.\n        password (str): The password of the user.\n        Returns:",
        "detail": "account.views",
        "documentation": {}
    },
    {
        "label": "Logout",
        "kind": 6,
        "importPath": "account.views",
        "description": "account.views",
        "peekOfCode": "class Logout(APIView):\n    permission_classes=[AllowAny]\n    def post(self, request,id):\n        user =  CustomUser.objects.filter(id=id).first\n        request.user = user\n        # print(request.user)\n        logout(request)\n        if not request.user.is_authenticated:\n            return Response({\n            'message': 'logout succesfull'",
        "detail": "account.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0001_initial",
        "description": "app.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='School',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('school_name', models.CharField(max_length=128)),",
        "detail": "app.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0002_rename_school_name_school_name_school_contact_and_more",
        "description": "app.migrations.0002_rename_school_name_school_name_school_contact_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app', '0001_initial'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='school',\n            old_name='school_name',\n            new_name='name',\n        ),",
        "detail": "app.migrations.0002_rename_school_name_school_name_school_contact_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0003_rename_firstname_student_firstname",
        "description": "app.migrations.0003_rename_firstname_student_firstname",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app', '0002_rename_school_name_school_name_school_contact_and_more'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='student',\n            old_name='firstNAme',\n            new_name='firstName',\n        ),",
        "detail": "app.migrations.0003_rename_firstname_student_firstname",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0004_alter_cart_student",
        "description": "app.migrations.0004_alter_cart_student",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app', '0003_rename_firstname_student_firstname'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='cart',\n            name='student',\n            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student', to='app.student'),\n        ),",
        "detail": "app.migrations.0004_alter_cart_student",
        "documentation": {}
    },
    {
        "label": "CustomStudentView",
        "kind": 6,
        "importPath": "app.CustomerView",
        "description": "app.CustomerView",
        "peekOfCode": "class CustomStudentView(APIView):\n    permission_classes = [AllowAny]\n    def post(self, request):\n        print(Student.objects.filter(id=1))\n        # Vérifiez si le fichier est fourni dans la requête\n        csv_file = request.FILES.get('file')\n        if not csv_file:\n            return Response({\"error\": \"Aucun fichier n'a été fourni.\"}, status=status.HTTP_400_BAD_REQUEST)\n        # Vérifiez que le fichier a une extension CSV\n        if not csv_file.name.endswith('.csv'):",
        "detail": "app.CustomerView",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "kind": 6,
        "importPath": "app.apps",
        "description": "app.apps",
        "peekOfCode": "class AppConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'app'",
        "detail": "app.apps",
        "documentation": {}
    },
    {
        "label": "School",
        "kind": 6,
        "importPath": "app.models",
        "description": "app.models",
        "peekOfCode": "class School(models.Model):\n    name = models.CharField(max_length=128)\n    devise = models.CharField(max_length=255)\n    contact = models.CharField(max_length=255)\n    logo = models.TextField()\n    # academic_year = models.DateField()\n    def __str__(self):\n        return self.name\nclass Classe(models.Model):\n    school = models.ForeignKey(School, on_delete=models.CASCADE, related_name='classe')",
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Classe",
        "kind": 6,
        "importPath": "app.models",
        "description": "app.models",
        "peekOfCode": "class Classe(models.Model):\n    school = models.ForeignKey(School, on_delete=models.CASCADE, related_name='classe')\n    name = models.CharField(max_length=255)\n    def __str__(self):\n        return self.name\nclass Student(models.Model):\n    classe = models.ForeignKey(Classe,on_delete=models.CASCADE,related_name='students')\n    matricule = models.CharField(max_length=255,unique=True)\n    firstName = models.CharField(max_length=255)\n    lastName = models.CharField(max_length=255)",
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Student",
        "kind": 6,
        "importPath": "app.models",
        "description": "app.models",
        "peekOfCode": "class Student(models.Model):\n    classe = models.ForeignKey(Classe,on_delete=models.CASCADE,related_name='students')\n    matricule = models.CharField(max_length=255,unique=True)\n    firstName = models.CharField(max_length=255)\n    lastName = models.CharField(max_length=255)\n    date_of_birth = models.DateField()\n    def __str__(self):\n        return self.firstName\nclass Cart(models.Model):\n    student = models.OneToOneField(Student,on_delete=models.CASCADE,related_name='student')",
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Cart",
        "kind": 6,
        "importPath": "app.models",
        "description": "app.models",
        "peekOfCode": "class Cart(models.Model):\n    student = models.OneToOneField(Student,on_delete=models.CASCADE,related_name='student')\n    image = models.TextField()\n    def __str__(self):\n        return self.student.matricule",
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "SchoolSerializer",
        "kind": 6,
        "importPath": "app.serializers",
        "description": "app.serializers",
        "peekOfCode": "class SchoolSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = School\n        fields = '__all__'\nclass ClasseSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Classe\n        fields = '__all__'\nclass StudentSerializer(serializers.ModelSerializer):\n    # classe_id = serializers.PrimaryKeyRelatedField(source='classe', write_only=True, queryset=Classe.objects.all())",
        "detail": "app.serializers",
        "documentation": {}
    },
    {
        "label": "ClasseSerializer",
        "kind": 6,
        "importPath": "app.serializers",
        "description": "app.serializers",
        "peekOfCode": "class ClasseSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Classe\n        fields = '__all__'\nclass StudentSerializer(serializers.ModelSerializer):\n    # classe_id = serializers.PrimaryKeyRelatedField(source='classe', write_only=True, queryset=Classe.objects.all())\n    classe =ClasseSerializer()\n    class Meta:\n        model = Student\n        fields = ['id', 'matricule', 'firstName', 'lastName', 'date_of_birth', 'classe_id','classe']",
        "detail": "app.serializers",
        "documentation": {}
    },
    {
        "label": "StudentSerializer",
        "kind": 6,
        "importPath": "app.serializers",
        "description": "app.serializers",
        "peekOfCode": "class StudentSerializer(serializers.ModelSerializer):\n    # classe_id = serializers.PrimaryKeyRelatedField(source='classe', write_only=True, queryset=Classe.objects.all())\n    classe =ClasseSerializer()\n    class Meta:\n        model = Student\n        fields = ['id', 'matricule', 'firstName', 'lastName', 'date_of_birth', 'classe_id','classe']\n        # read_only_fields = ['classe']\n    def create(self, validated_data):\n        classe = validated_data.pop('classe')\n        student = Student.objects.create(classe=classe, **validated_data)",
        "detail": "app.serializers",
        "documentation": {}
    },
    {
        "label": "CartSerializer",
        "kind": 6,
        "importPath": "app.serializers",
        "description": "app.serializers",
        "peekOfCode": "class CartSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Cart\n        fields = '__all__'\nclass CustomUserSerializer(serializers.Serializer):\n    file = serializers.FileField()",
        "detail": "app.serializers",
        "documentation": {}
    },
    {
        "label": "CustomUserSerializer",
        "kind": 6,
        "importPath": "app.serializers",
        "description": "app.serializers",
        "peekOfCode": "class CustomUserSerializer(serializers.Serializer):\n    file = serializers.FileField()",
        "detail": "app.serializers",
        "documentation": {}
    },
    {
        "label": "CustomStudentViewTests",
        "kind": 6,
        "importPath": "app.tests",
        "description": "app.tests",
        "peekOfCode": "class CustomStudentViewTests(TestCase):\n    def test_upload_csv(self):\n        url = reverse('students_registers') \n        with open('/home/shooter/Downloads/students_data.csv', 'rb') as file:\n            response = self.client.post(url, {'file': file}, format='multipart')\n        self.assertEqual(response.status_code, 201) \n        self.assertIn(\"Fichier CSV traité avec succès.\", response.content.decode('utf-8'))  # Décodez le contenu",
        "detail": "app.tests",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "app.urls",
        "description": "app.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r'schools', SchoolViewSet)\nrouter.register(r'classes', ClasseViewSet)\nrouter.register(r'students', StudentViewSet)\nrouter.register(r'carts',CartViewSet)\nurlpatterns = [\n    path('students/registers/',CustomStudentView.as_view(),name='students_register'),\n    path('', include(router.urls)),\n]",
        "detail": "app.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app.urls",
        "description": "app.urls",
        "peekOfCode": "urlpatterns = [\n    path('students/registers/',CustomStudentView.as_view(),name='students_register'),\n    path('', include(router.urls)),\n]",
        "detail": "app.urls",
        "documentation": {}
    },
    {
        "label": "SchoolViewSet",
        "kind": 6,
        "importPath": "app.views",
        "description": "app.views",
        "peekOfCode": "class SchoolViewSet(viewsets.ModelViewSet):\n    permission_classes = [AllowAny]\n    queryset = School.objects.all()\n    serializer_class = SchoolSerializer\nclass ClasseViewSet(viewsets.ModelViewSet):\n    permission_classes = [AllowAny]\n    queryset = Classe.objects.all()\n    serializer_class = ClasseSerializer\nclass StudentViewSet(viewsets.ModelViewSet):\n    queryset = Student.objects.all()",
        "detail": "app.views",
        "documentation": {}
    },
    {
        "label": "ClasseViewSet",
        "kind": 6,
        "importPath": "app.views",
        "description": "app.views",
        "peekOfCode": "class ClasseViewSet(viewsets.ModelViewSet):\n    permission_classes = [AllowAny]\n    queryset = Classe.objects.all()\n    serializer_class = ClasseSerializer\nclass StudentViewSet(viewsets.ModelViewSet):\n    queryset = Student.objects.all()\n    serializer_class = StudentSerializer\n    permission_classes = [AllowAny]\n    # @action(detail=False, methods=['post'], url_path='registers')\n    # def post(self, request):",
        "detail": "app.views",
        "documentation": {}
    },
    {
        "label": "StudentViewSet",
        "kind": 6,
        "importPath": "app.views",
        "description": "app.views",
        "peekOfCode": "class StudentViewSet(viewsets.ModelViewSet):\n    queryset = Student.objects.all()\n    serializer_class = StudentSerializer\n    permission_classes = [AllowAny]\n    # @action(detail=False, methods=['post'], url_path='registers')\n    # def post(self, request):\n    #     print(Classe.objects.filter(id=1))\n    #     # Vérifiez si le fichier est fourni dans la requête\n    #     csv_file = request.FILES.get('file')\n    #     if not csv_file:",
        "detail": "app.views",
        "documentation": {}
    },
    {
        "label": "CartViewSet",
        "kind": 6,
        "importPath": "app.views",
        "description": "app.views",
        "peekOfCode": "class CartViewSet(viewsets.ModelViewSet):\n    permission_classes = [AllowAny]\n    queryset = Cart.objects.all()\n    serializer_class = CartSerializer\n    # def create(self, request, *args, **kwargs):\n    #     matricule = request.data.get('matricule')\n    #     student_instance = Student.objects.filter(matricule=matricule).first()\n    #     request.data['student'] = student_instance\n    #     if not student_instance:\n    #         return Response({'error': 'Student not found.'}, status=status.HTTP_404_NOT_FOUND)",
        "detail": "app.views",
        "documentation": {}
    },
    {
        "label": "CustomStudentView",
        "kind": 6,
        "importPath": "app.views",
        "description": "app.views",
        "peekOfCode": "class CustomStudentView(viewsets.generics.CreateAPIView):\n    permission_classes = [AllowAny]\n    serializer_class = CustomUserSerializer\n    def post(self, request):\n        print(Student.objects.filter(id=1))\n        # Vérifiez si le fichier est fourni dans la requête\n        csv_file = request.FILES.get('file')\n        if not csv_file:\n            return Response({\"error\": \"Aucun fichier n'a été fourni.\"}, status=status.HTTP_400_BAD_REQUEST)\n        # Vérifiez que le fichier a une extension CSV",
        "detail": "app.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'BackendTp231.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]